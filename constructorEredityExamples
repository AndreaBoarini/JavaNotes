EREDITY EXAMPLES - What works and what not

I°
class A {
  int x;
  int y;
  A(int x, int y) {
    this.x = x;
    this.y = y;
  }
}

class B extends A {
}
// In questo primo caso NON COMPILA perchè la superclasse non ha
// un costruttore di default da offrire alla sottoclasse. Il programma chiamerebbe in automatico
// il costruttore della superclasse perchè non è definito alcun costruttore nella sottoclasse.

class A {
  int x;
  int y;
  A(int x, int y) {
    this.x = x;
    this.y = y;
  }
  A() {
    x = 0;
    y = 0;
  }
}
class B extends A {
}
// In questo secondo caso il programma COMPILA perchè la superclasse ha un costruttore a zero parametri
// disponibile per poter essere invocato nella sottoclasse in maniera automatica perchè questa non dispone
// di alcun costruttore.

III°
class A {
  int x;
  int y;
  A(int x, int y) {
    this.x = x;
    this.y = y;
  }
}
class B extends A {
  B(int x, int y) {
    super(x, y);
  }
}
// In questo terzo caso il programma COMPILA in quanto quando la sottoclasse chiama il costruttore della superclasse
// sta chiamando quello specifico che può essere fornito, si può vedere come una chiamata esplicita
